@model BookSignedOut

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@ViewBag.LibraryBook</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.WhenSignedOut)
    @Html.HiddenFor(model => model.LibraryBookSId)


    <div class="form-horizontal">
        <h4>BookSignedOut</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*
        3.b A valid membership ID must be input.

        6. Allow multiple (different) books to be signed out by a member at once.
        Keep it simple because there is a time limit.
        *@
        <div class="form-group">
            @Html.LabelFor(model => model.MemberId, "MemberId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MemberId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Return Library", "index", "Libraries")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
